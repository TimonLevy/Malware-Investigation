main:
00401010 push ebp						// Create new stack frame.
00401011 mov ebp,esp
00401013 push ecx										┐ int i;																							
00401014 mov dword ptr [ebp-4],0						┘ i = 0;                    																		
0040101B jmp 00401026					■────┐										// Jump when entering the loop.
0040101D mov eax,dword ptr [ebp-4]		◄════╪═══╗		┐							// move `i` to eax.											
00401020 add eax,1						First│	 ║C C 	│ i++                   	// increment `i`											
00401023 mov dword ptr [ebp-4],eax		Iter.│	 ║o h	┘                       	// move updated value to the stack. 						
00401026 cmp dword ptr [ebp-4],0Ah		◄────┘	 ║n e	┐ i<10                  	// Compare `i` to 10.													
0040102A jge 00401040					■────┐	 ║d c	┘                       	// If is is greater than or equal to 10, skip the code, end the loop.	
0040102C mov ecx,dword ptr [ebp-4]		Loop │	 ║i k	┐                       	// move `i` into ecx.													
0040102F push ecx						is	 │	 ║t 	│ printf("i = %d\n", i);	// push `i`.															
00401030 push 405000h					over.│	 ║i 	│                       	// push the string's pointer.											
00401035 call dword ptr ds:[00406230h]		 │	 ║o 	│                       	// call `printf`														
0040103B add esp,8							 │	 ║n 	┘                       	// clear parametes from stack (cdecl )									
0040103E jmp 0040101D					■════╪═══╝                               
00401040 xor eax,eax					◄────┘										// Set eax to 0.
00401042 mov esp,ebp																// destroy stack frame.
00401044 pop ebp
00401045 ret
_____________________________________________________________________________________________________________________________________________________________
Code:

#include <stdio.h>

int main()
{
    int i;
    for(i = 0; i < 10; i++)
    {
        printf("i = %d\n“, i);
    }
}